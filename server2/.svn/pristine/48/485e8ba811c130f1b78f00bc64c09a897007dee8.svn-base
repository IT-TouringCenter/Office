<?php
namespace App\Facades\ActivityFacades\ICAS;

use App\Repositories\IcasRepo\ConfigurationActivityPriceRepository as ConfigurationActivityPriceRepository;
use App\configuration_activity_price as configuration_activity_price;

class IcasReserveClass extends BaseClass{
  public function __construct(ConfigurationActivityPriceRepository $repo){
    $this->ConfigurationActivityPriceRepository = $repo;
  }

  // Reserve Icas
  public function GetReserveIcas(){
    $this->reserve = new configuration_activity_price;
    $this->GetTransferConventionCentre();
    $this->GetTransferAirport();
    return $this->reserve;
  }

  // Transfer Convention Centre
  public function GetTransferConventionCentre(){
    $convention_repo = $this->ConfigurationActivityPriceRepository->GetConfigActivityPriceByTransferConventionCentre();
    $transfer_convention_arr = [];
    foreach($convention_repo as $value){
      $this->transfer_convention = new configuration_activity_price;

      // Transportation 
      $get_config_transport = \IcasConfigurationTransportationFacade::GetTransportationById($value->configuration_transportation_id);
      $this->GetTransportationByIdWithConvention($get_config_transport[0]->transportation_id);

      // Transfer mode
      $get_transfer_mode = \IcasTransferModeFacade::GetModeByTransferModeId($value->transfer_mode_id);
      $mode_arr = [];
      foreach($get_transfer_mode as $vals){
        $this->transfer_mode = new configuration_activity_price;
        $this->transfer_mode->modeId = $vals->id;
        $this->transfer_mode->mode = $vals->mode;

        // Transfer reserve type
        $get_transfer_reserve_mode = \IcasTransferReserveTypeFacade::GetTransferReserveTypeById($value->transfer_reserve_type_id);
        $reserve_arr = [];
        foreach($get_transfer_reserve_mode as $val){
          $reserve_type = new configuration_activity_price;
          $reserve_type->transferReserveTypeId = $val->id;
          $reserve_type->transferReserveType = $val->reserve_type;
          array_push($reserve_arr,$reserve_type);
        }
        $this->transfer_mode->routes = $reserve_arr;
        $this->transfer_mode->prices = $value->price;
        $this->transfer_mode->validityStart = $value->validity_start;
        $this->transfer_mode->validityEnd = $value->validity_end;
        array_push($mode_arr,$this->transfer_mode);
      }
      $this->transfer_convention->modes = $mode_arr;
      array_push($transfer_convention_arr,$this->transfer_convention);
    }
    $this->reserve->transferConventionCentres = $transfer_convention_arr[0];
  }

  // Convention Centre : Get configuration transportation
  public function GetTransportationByIdWithConvention($transport_id){
    $get_transport = \IcasTransportationFacade::GetTransportationById($transport_id);
    $transport_arr = [];
    foreach($get_transport as $value){
      $transport = new configuration_activity_price;
      $transport->transportId = $value->id;
      $transport->transport = $value->transportation;
      array_push($transport_arr,$transport);
    }
    $this->transfer_convention->transportation = $transport_arr[0];
  }

  // Transfer Airport
  public function GetTransferAirport(){
  	$airport_arr = [];
  	$airport_repo = $this->ConfigurationActivityPriceRepository->GetConfigActivityPriceByTransferAirport();
  	foreach($airport_repo as $value){
  		$this->airport = new configuration_activity_price;
  		$this->GetModeByTransferModeId($value->transfer_mode_id,$value->transfer_reserve_type_id);
  		// $this->airport->routes = \IcasTransferReserveTypeFacade::GetTransferReserveTypeById($value->transfer_reserve_type_id);
      array_push($airport_arr,$this->airport);
  	}
    $this->transferairport = new configuration_activity_price;
    $this->GetTransportationById($airport_repo[0]->configuration_transportation_id);
    $this->transferairport->modes = $airport_arr;
  	$this->reserve->transferAirports = $this->transferairport;
  }

  // Get Transportation by Id
  public function GetTransportationById($config_transport_id){
    $get_config_transport = \IcasConfigurationTransportationFacade::GetTransportationById($config_transport_id);
    $get_transport = \IcasTransportationFacade::GetTransportationById($get_config_transport[0]->transportation_id);
    $transport_arr = [];
    foreach($get_transport as $value){
      $transport = new configuration_activity_price;
      $transport->transportId = $value->id;
      $transport->transport = $value->transportation;
      array_push($transport_arr,$transport);
    }
    $this->transferairport->transportation = $transport_arr[0];
  }

  // Get Mode by Transfer Airport
  public function GetModeByTransferModeId($transfer_mode_id){
    $transfer_mode = \IcasTransferModeFacade::GetModeByTransferModeId($transfer_mode_id);
  	foreach($transfer_mode as $value){
  		$this->mode = new configuration_activity_price;
      $this->mode->modeId = $value->id;
  		$this->mode->mode = $value->mode;
      // $this->GetPriceByTransferMode($transfer_reserve_type_id);
  		$this->GetPriceByTransferMode($value->id);
  		$this->airport = $this->mode;
  	}
  }

  // Get Price by Transfer Mode
  public function GetPriceByTransferMode($transfer_mode_id){
  	$get_price = $this->ConfigurationActivityPriceRepository->GetConfigActivityPriceByGroupTransferModeId($transfer_mode_id);
  	foreach($get_price as $value){
      $this->mode->id = $value->transfer_reserve_type_id;
      $this->GetTransferReserveTypeByModeId($value->transfer_reserve_type_id);
      $this->mode->price = $value->price;
      $this->mode->validityStart = $value->validity_start;
      $this->mode->validityEnd = $value->validity_end;
  	}
  }

  // Get Transfer reserve type by Mode id
  public function GetTransferReserveTypeByModeId($transfer_reserve_type_id){
    $getmode = $this->ConfigurationActivityPriceRepository->GetConfigActivityPriceByTransferModeId($transfer_reserve_type_id);
    // $this->mode->routes = $getmode;
    $getmode_arr = [];
    foreach($getmode as $value){
      $this->reserve_type = new configuration_activity_price;
      $this->GetTransferReserveTypeById($value->transfer_reserve_type_id);
      array_push($getmode_arr,$this->reserve_type);
    }
    $this->mode->routes = $getmode_arr;
  }

  // Get Transfer reserve type by id
  public function GetTransferReserveTypeById($transfer_reserve_type_id){
    $get_reserve_type = \IcasTransferReserveTypeFacade::GetTransferReserveTypeById($transfer_reserve_type_id);
    // $this->reserve_type = $get_reserve_type;
    $get_reserve_type_arr = [];
    foreach($get_reserve_type as $value){
      $this->transfer_reserve = new configuration_activity_price;
      $this->transfer_reserve->transferReserveTypeId = $value->id;
      $this->transfer_reserve->transferReserveType = $value->reserve_type;
      array_push($get_reserve_type_arr,$this->transfer_reserve);
    }
    $this->reserve_type = $get_reserve_type_arr[0];
  }
}
?>